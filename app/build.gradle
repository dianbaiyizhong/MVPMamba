apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.zhenmei.mvpmamba"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias '5590026'
            keyPassword '5590026'
            storeFile file('../mvpmamba.jks')
            storePassword '5590026'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(':mvpmamba')

    implementation project(':mvpmamba-annotation')
    annotationProcessor project(':mvpmamba-compiler')

    implementation rootProject.ext.dependencies["material"]

    implementation 'com.bytedance.boost_multidex:boost_multidex:1.0.1'


    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]


    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    implementation rootProject.ext.dependencies["logger"]



    implementation rootProject.ext.dependencies["utilcodex"]

    implementation rootProject.ext.dependencies["fastjson"]


}
// 修改代码直接run的时候会奔溃，因此每次都删除build目录
task cleanApk(type: Delete) {
    String path = projectDir.getAbsoluteFile().toString() + File.separator + "build" + File.separator;


    File file = new File(path)
    if (file.exists()) {
        println("delete build:" + path)
        file.deleteDir()
    }

}